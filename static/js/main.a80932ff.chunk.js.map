{"version":3,"sources":["types/Filter.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","utils/functions.ts","index.tsx"],"names":["Filter","TodoItem","filteredTodos","setSelectedTodoId","selectedTodo","map","todo","className","id","completed","title","type","onClick","classNames","TodoList","TodoFilter","filter","setFilter","query","setQuery","value","onChange","event","target","Object","keys","key","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","TodoModal","selectedTodoId","useState","user","setUser","useEffect","userId","href","email","name","App","todosList","setTodosList","isLoading","setIsLoading","All","todoList","toLowerCase","includes","Active","Completed","filterTodoList","finally","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a80932ff.chunk.js","sourcesContent":["export enum Filter {\n  All = 'All',\n  Active = 'Active',\n  Completed = 'Completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  filteredTodos: Todo[],\n  setSelectedTodoId: (arg: number) => void,\n  selectedTodo: Todo | undefined,\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  filteredTodos,\n  setSelectedTodoId,\n  selectedTodo,\n}) => {\n  return (\n    <tbody>\n      {filteredTodos.map(todo => (\n        <tr data-cy=\"todo\" key={todo.id}>\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed === true && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={todo.completed === false\n              ? 'has-text-danger'\n              : 'has-text-success'}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => setSelectedTodoId(todo.id)}\n            >\n              <span className=\"icon\">\n                <i className={classNames(selectedTodo?.id === todo.id\n                  ? 'far fa-eye-slash'\n                  : 'far fa-eye')}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem/TodoItem';\n\ntype Props = {\n  filteredTodos: Todo[],\n  selectedTodo: Todo | undefined,\n  setSelectedTodoId: (arg: number) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  filteredTodos,\n  setSelectedTodoId,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <TodoItem\n      filteredTodos={filteredTodos}\n      setSelectedTodoId={setSelectedTodoId}\n      selectedTodo={selectedTodo}\n    />\n  </table>\n);\n","import React from 'react';\nimport { Filter } from '../../types/Filter';\n\ntype Props = {\n  filter: string,\n  setFilter: (value: Filter) => void,\n  query: string,\n  setQuery: React.Dispatch<React.SetStateAction<string>>,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filter,\n  setFilter,\n  query,\n  setQuery,\n}) => {\n  const handleQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const handleFilter = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilter(event.target.value as Filter);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={handleFilter}\n          >\n            {Object.keys(Filter).map(key => (\n              <option value={key} key={key}>\n                {key}\n              </option>\n            ))}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              aria-label=\"Clear Search Button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getActiveTodos = () => {\n  return getTodos()\n    .then(todos => todos\n      .filter(({ completed }) => completed === false));\n};\n\nexport const getCompletedTodos = () => {\n  return getTodos()\n    .then(todos => todos\n      .filter(({ completed }) => completed === true));\n};\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  selectedTodoId: number,\n  selectedTodo: Todo | null,\n  setSelectedTodoId: (id: number) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodoId,\n  selectedTodo,\n  setSelectedTodoId,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (selectedTodo) {\n      getUser(selectedTodo.userId)\n        .then(setUser);\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!selectedTodo || !user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodoId}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodoId(0)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo?.completed === true\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Filter } from './types/Filter';\nimport { filterTodoList } from './utils/functions';\n\nexport const App: React.FC = () => {\n  const [todosList, setTodosList] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [filter, setFilter] = useState(Filter.All);\n  const [query, setQuery] = useState('');\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n\n  const filteredTodos = filterTodoList(todosList, query, filter);\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodosList)\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const selectedTodo = todosList.find(todo => todo.id === selectedTodoId);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filter={filter}\n                setFilter={setFilter}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && (<Loader />)}\n              <TodoList\n                filteredTodos={filteredTodos}\n                setSelectedTodoId={setSelectedTodoId}\n                selectedTodo={selectedTodo}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodoId={selectedTodoId}\n          selectedTodo={selectedTodo}\n          setSelectedTodoId={setSelectedTodoId}\n        />\n      )}\n    </>\n  );\n};\n","import { Filter } from '../types/Filter';\nimport { Todo } from '../types/Todo';\n\nexport function filterTodoList(\n  todoList: Todo[],\n  query: string,\n  filter: string,\n) {\n  return todoList\n    .filter(todo => todo.title.toLowerCase()\n      .includes(query.toLowerCase()))\n    .filter(todo => {\n      switch (filter) {\n        case Filter.Active:\n          return !todo.completed;\n\n        case Filter.Completed:\n          return todo.completed;\n\n        default:\n          return todo;\n      }\n    });\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}